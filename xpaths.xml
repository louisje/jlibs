<xpaths>
    <testcase xmlns:xs="http://www.w3.org/2001/XMLSchema"
              xmlns:abc="http://www.w3schools.com"
              >
        <file>xmlFiles/note.xml</file>

        <xpath>true()</xpath>
        <xpath>false()</xpath>
        <xpath>boolean(/xs:schema/@targetNamespace)</xpath>
        <xpath>boolean(/xs:schema/@targetNamespace1)</xpath>
        <xpath>1+2*5 div 2 mod 3</xpath>
        <xpath>(1+2)*5</xpath>
        <xpath>normalize-space('  santhosh  kumar   ')</xpath>
        <xpath>string-length(normalize-space('  santhosh  kumar   '))</xpath>
        <xpath>string-length('  santhosh  kumar   ')</xpath>
        <xpath>/xs:schema/descendant-or-self::*[1]</xpath>
        <xpath>/xs:schema/descendant-or-self::*[3]</xpath>
        <xpath>/xs:schema/descendant-or-self::*[4]/@namespace</xpath>
        <xpath>/descendant::xs:element[2]</xpath>
        <xpath>//xs:element[2]</xpath>
        <xpath>//xs:element[position()=2]</xpath>
        <xpath>/xs:schema/@targetNamespace</xpath>
        <xpath>/xs:schema/xs:complexType</xpath>
        <xpath>/xs:schema/xs:element[xs:complexType/@name]/@name</xpath>
        <xpath>/xs:schema/xs:element[xs:complexType]/@name</xpath>
        <xpath>/xs:schema/xs:element/@name</xpath>
        <xpath>/xs:schema/xs:complexType/@name</xpath>
        <xpath>/xs:schema/*/@name</xpath>
        <xpath>/xs:schema/xs:*/@name</xpath>
        <xpath>xs:schema//xs:element/@name</xpath>
        <xpath>/xs:schema/descendant-or-self::xs:element/@name</xpath>
        <xpath>/xs:schema/descendant-or-self::xs:schema/@targetNamespace</xpath>
        <xpath>/xs:schema//@name</xpath>
        <xpath>/xs:schema//text()</xpath>
        <xpath>//text()</xpath>
        <xpath>/xs:schema/@*</xpath>
        <xpath>/xs:schema/@abc:*</xpath>
        <xpath>/xs:schema/*/xs:complexType/@name</xpath>
        <xpath>//xs:any[2]/@namespace</xpath>
        <xpath>//@name</xpath>
        <xpath>xs:schema//xs:complexType/@name</xpath>
        <xpath>xs:schema/xs:any/@namespace</xpath>
        <xpath>//xs:sequence/child::xs:any/@namespace</xpath>
        <xpath>name(/*/*/*)</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/simple.xml</file>

        <xpath>concat( /root/a, /root/b )</xpath>
        <xpath>concat( /root/b, /root/a )</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/positions.xml</file>

        <xpath>/child::node()</xpath>
        <xpath>/child::*</xpath>
        <xpath>/descendant::node()</xpath>
        <xpath>/descendant::*</xpath>
        <xpath>/descendant-or-self::node()</xpath>
        <xpath>/descendant-or-self::*</xpath>
        <xpath>/descendant::E2[2]</xpath>
        <xpath>/descendant::*/E2[2]</xpath>
        <xpath>/X/E1/E2[2]</xpath>
        <xpath>/Root/E1/E2[E4]/E3/@name</xpath>
    </testcase>

    <testcase xmlns:env="http://mysoap"
              xmlns:dns1="http://default1"
              xmlns:dns2="http://default2"
              xmlns:dns3="http://default3">
        <file>xmlFiles/sample.xml</file>
        
        <!-- simple queries -->
        <xpath>/root</xpath>
        <xpath>/root/pub</xpath>
        <xpath>/root/pub/book</xpath>
        <xpath>/root/*/book</xpath>
        <xpath>/*/*/book</xpath>
        <xpath>/root/pub/*</xpath>
        <xpath>/root/*/*</xpath>
        <xpath>/*/*/*</xpath>
        <xpath>/*/*</xpath>
        <xpath>/*</xpath>
        <xpath>*</xpath>
        <xpath>/root/*</xpath>
        <xpath>/*/*</xpath>
        <xpath>.</xpath>
        <xpath>./*</xpath>

        <!-- simple queries with closure-->
        <xpath>/root//pub</xpath>
        <xpath>/root/pub//book</xpath>
        <xpath>/root/*//book</xpath>
        <xpath>/*/*//book</xpath>
        <xpath>/root//pub/*</xpath>
        <xpath>/root//*/*</xpath>
        <xpath>/*//*/*</xpath>
        <xpath>//*</xpath>
        <xpath>//*/*</xpath>
        <xpath>/*//*</xpath>
        <xpath>//pub/book</xpath>
        <xpath>//Body</xpath>

        <!-- descendant-or-self, descendant and self axes -->
		<xpath>/root/pub/descendant-or-self::*</xpath>
		<xpath>/root/pub/descendant-or-self::pub</xpath>
		<xpath>//book/pub/descendant-or-self::*</xpath>
		<xpath>//book/pub/descendant-or-self::pub</xpath>
		<xpath>/root/pub/descendant::*</xpath>
		<xpath>/root/pub/descendant::pub</xpath>
		<xpath>//book/pub/descendant::*</xpath>
		<xpath>//book/pub/descendant::pub</xpath>
		<xpath>//book/*/self::*</xpath>
        <xpath>//book/*/self::pub</xpath>
        <xpath>//book/pub/self::pub</xpath>
        
        <!-- node tests -->
        <xpath>/root/pub/book/*</xpath>
        <xpath>/root/pub/book/text()</xpath>
        <xpath>/root/pub/book/@*</xpath>
        <xpath>/root/pub/book/@id</xpath>
        <xpath>//book/*</xpath>
        <xpath>//book/text()</xpath>
        <xpath>//book/@*</xpath>
        <xpath>//@*</xpath>
        <xpath>//@id</xpath>
        <xpath>/root/pub/node()/*</xpath>
        <xpath>//book/node()</xpath>
        <xpath>/root/pub/book/node()</xpath>
        <xpath>/comment()</xpath>
        <xpath>//comment()</xpath>
        <xpath>/root//comment()</xpath>
        <xpath>/processing-instruction()</xpath>
        <xpath>//processing-instruction()</xpath>
        <xpath>/root//processing-instruction()</xpath>
        <xpath>/descendant::*/comment()</xpath>
        <xpath>/descendant-or-self::node()/comment()</xpath>

        <!-- unabbreviated axes -->
        <xpath>/root/pub/book/attribute::*</xpath>
        <xpath>/root/pub/book/attribute::id</xpath>
        <xpath>//book/attribute::*</xpath>
        <xpath>//book/pub/descendant-or-self::*</xpath>

        <!-- other tests -->
		<xpath>/root//*</xpath>
		<xpath>/root/pub/descendant-or-self::*</xpath>
        <xpath>//text()</xpath>
        <xpath>/descendant::node()/text()</xpath>
        <xpath>/descendant-or-self::node()/text()</xpath>
        <xpath>/root/descendant-or-self::*/descendant-or-self::*</xpath>
        <xpath>count(/root/descendant-or-self::node())</xpath>        

        <!-- namespace prefix -->
        <xpath>/root/XMLFragment2/env:Envelope</xpath>
        <xpath>/root/*/env:*</xpath>
        <xpath>/root//env:Envelope</xpath>
        <xpath>//env:*</xpath>
        <xpath>//dns1:*</xpath>
        <xpath>//dns2:*</xpath>
        <xpath>//dns3:*</xpath>
        <xpath>//chapter</xpath>
        <xpath>//para</xpath>
        <xpath>//*//temp[1]/.</xpath>

        <!-- position -->
        <xpath>/root/pub/book[ 1 ]</xpath>
        <xpath>//book/price[ 1 ]</xpath>
        <xpath>//book/price[ 2 ]</xpath>
		<xpath>//*/temp[1]/.</xpath>
        <xpath>//*/temp[4]/.</xpath>
        <xpath>//temp[4]/.</xpath>
        <xpath>//book/*[ 2 ]</xpath>

        <!-- nested paths -->
        <xpath>//Price[@symbol]</xpath>
        
        <!-- other tests -->
        <xpath>/root//self::*</xpath>

        <!-- nested predicates -->
        <xpath>/root/pub[ book[ name ]]/book</xpath>
        <xpath>/root/pub/book[ pub[ book[ name ]]]</xpath>
        <xpath>/root/pub[ book ]/book[ pub[ book[ name ]]]</xpath>
        <xpath>/root/pub[ book[ pub[ book[ name ]]]]/book[ pub[ book[ name ]]]</xpath>
        <xpath>//book[price]</xpath>

        <!-- closure in predicate -->
        <xpath>//pub[.//book//author]</xpath>

        <!-- queries with Or, And & AndOr structures in predicate-->
        <xpath>//book[price and author]</xpath>
        <xpath>//book[price or author]</xpath>
        <xpath>//book[price and author or name]</xpath>

        <!-- count() used at the top level -->
        <xpath>count(/root/pub/book/price)</xpath>
        <xpath>/root[ pub/book/author ]/pub/book/price</xpath>
        <xpath>count(/root[ pub/book/author ]/pub/book/price)</xpath>
        <xpath>count(/root[ pub/book/author ]/pub[ book/author ]/book/price)</xpath>
        <xpath>count(/root/pub/book[ author ]/price)</xpath>
        <xpath>count(/root/pub[ book/author ]/book[ author ]/price)</xpath>
        <xpath>count(/root[ pub/book/author ]/pub[ book/author ]/book[ author ]/price)</xpath>
        <xpath>/root[ pub/book/author ]/pub[ book/author ]/book[ price ]/price</xpath>
        <xpath>count(/root[ pub/book/author ]/pub[ book/author ]/book[ price ]/price)</xpath>
        <xpath>count(/descendant::node())</xpath>
        <xpath>count(/nonexistingelement)</xpath>

        <!-- string() function -->
        <xpath>string(//book)</xpath>
        <xpath>string(//book[2])</xpath>
        <xpath>string(//book/@*)</xpath>
        <xpath>string(/)</xpath>
        <xpath>string(//book/text())</xpath>
        <xpath>string(/nonexistingelement)</xpath>
        <xpath>string(//book[@testAttr])</xpath>
        <xpath>string(//book[testElem])</xpath>
        <xpath>string(//book[@testAttr]/price)</xpath>
        <xpath>string(//book[testElem]/price)</xpath>

        <!-- sum() function -->
        <xpath>sum(/root/pub/book/price)</xpath>
        <xpath>sum(/root[ pub/book/author ]/pub/book/price)</xpath>
        <xpath>sum(/root[ pub/book/author ]/pub[ book/author ]/book/price)</xpath>
        <xpath>sum(/root/pub/book[ author ]/price)</xpath>
        <xpath>sum(/root/pub[ book/author ]/book[ author ]/price)</xpath>
        <xpath>sum(/root[ pub/book/author ]/pub[ book/author ]/book[ author ]/price)</xpath>
        <xpath>sum(/root[ pub/book/author ]/pub[ book/author ]/book[ price ]/price)</xpath>
        <xpath>sum(//Price)</xpath>
        <xpath>sum(//book[@testAttr]/price)</xpath>
        <xpath>sum(//book[testElem]/price)</xpath>

        <!-- other functions -->
        <xpath>normalize-space( /root )</xpath>
        <xpath>concat( 'First Author: ', /root/pub/book[2]/author[1], ' Second Author: ', /root/pub/book[2]/author[2] )</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/numbers.xml</file>

        <xpath>/numbers/set/nr</xpath>
        <xpath>/numbers/set/nr/@value</xpath>
        <xpath>/numbers/set</xpath>
        <xpath>/numbers/set[1]</xpath>
        <xpath>/numbers/set[2]</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/underscore.xml</file>

        <xpath>/root/@a</xpath>
        <xpath>/root/@_a</xpath>
        <xpath>/root/b</xpath>
        <xpath>/root/_b</xpath>
    </testcase>

    <testcase xmlns:topic="http://www.oreilly.com/topics">
        <file>xmlFiles/contents.xml</file>

        <xpath>//@*</xpath>
        <xpath>/child::node()//@*</xpath>
        <xpath>//@topic:focus</xpath>
        <xpath>/child::node()//@topic:focus</xpath>
        <xpath>/child::node()//@topic:*</xpath>
        <xpath>//@topic:*</xpath>
        <xpath>/text()</xpath>
        <xpath>//text()</xpath>
        <xpath>/descendant-or-self::text()</xpath>
        <xpath>/descendant-or-self::node()/text()</xpath>
        <xpath>/processing-instruction()</xpath>
        <xpath>//processing-instruction()</xpath>
        <xpath>/comment()</xpath>
        <xpath>//comment()</xpath>
        <xpath>/*/comment()</xpath>
        <xpath>/child::node()/comment()</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/pi.xml</file>

        <xpath>//processing-instruction()</xpath>
        <xpath>//processing-instruction('cheese')</xpath>
        <xpath>//processing-instruction('toast')</xpath>
        <xpath>string(//processing-instruction('toast'))</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/evaluate.xml</file>

        <xpath>//jumps/*</xpath>
        <xpath>//jumps/object</xpath>
        <xpath>//jumps/object/dog</xpath>
        <xpath>//jumps/*/dog</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/web.xml</file>

        <xpath>/web-app/servlet/servlet-name</xpath>
        <xpath>/web-app/servlet[1]/servlet-name</xpath>
        <xpath>/web-app/servlet[1]/servlet-name/text()</xpath>
        <xpath>/web-app/servlet[2]/servlet-name</xpath>
        <xpath>/web-app/servlet[2]/servlet-name/text()</xpath>
        <xpath>/web-app/servlet[2][servlet-name]/*</xpath>

        <!-- test Axes -->
        <xpath>/*/servlet</xpath>
        <xpath>//servlet</xpath>
        <xpath>/web-app/descendant::servlet</xpath>
        <xpath>/web-app/descendant-or-self::servlet</xpath>
        <xpath>descendant::*</xpath>
        <xpath>/descendant::servlet</xpath>
        <xpath>/descendant-or-self::servlet</xpath>
        <xpath>descendant-or-self::servlet</xpath>
        <xpath>descendant::servlet</xpath>
        <xpath>descendant-or-self::*</xpath>
        <xpath>/*/descendant-or-self::*</xpath>

        <!-- name() function -->
        <xpath>name(/*)</xpath>
        <xpath>name(/*/child::*)</xpath>
        <xpath>name(/node())</xpath>
        <xpath>name(/*)</xpath>
        <xpath>name(/child::*)</xpath>
        <xpath>name(/child::node())</xpath>
        <xpath>name(./*)</xpath>
        <xpath>name(/nonexistingelement)</xpath>

        <!-- count() function -->
        <xpath>count(/*/servlet)</xpath>
        <xpath>count(//servlet)</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/fibo.xml</file>

        <xpath>/*/fibonacci[2]</xpath>
        <xpath>/*/fibonacci</xpath>
        <xpath>count(/*/fibonacci)</xpath>        
        <xpath>sum(//fibonacci)</xpath>
        <xpath>sum(//fibonacci/@index)</xpath>
        <xpath>count(/*/fibonacci) - 1</xpath>
    </testcase>

    <testcase xmlns:dummy="dummyNamespace"
              xmlns:x="noNamespace">
        <file>xmlFiles/defaultNamespace.xml</file>

        <xpath>/a/b/c</xpath>
        <xpath>/x:a/x:b/x:c</xpath>
        <xpath>/dummy:a/dummy:b/dummy:c</xpath>
        <xpath>/dummy:a/dummy:*/dummy:c</xpath>
        <xpath>/dummy:*/dummy:*/dummy:c</xpath>
        <xpath>/dummy:*/dummy:*/dummy:*</xpath>
        <xpath>/dummy:*//dummy:*</xpath>
        <xpath>//dummy:*</xpath>
    </testcase>

    <testcase xmlns:foo="fooNamespace"
              xmlns:voo="fooNamespace"
			  xmlns:bar="barNamespace"
              xmlns:alias="fooNamespace">
        <file>xmlFiles/namespaces.xml</file>

        <xpath>/*</xpath>
        <xpath>/foo:a</xpath>
        <xpath>/foo:a/b</xpath>
        <xpath>/foo:a/b/c</xpath>
        <xpath>/foo:a/foo:d/foo:e</xpath>
        <xpath>/foo:a/foo:x/foo:y</xpath>
        <xpath>/foo:a/bar:f</xpath>
        <xpath>/voo:a/b/c</xpath>
        <xpath>/voo:a/bar:f</xpath>
        <xpath>/foo:a/alias:x/alias:y</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/text.xml</file>

        <xpath>/foo/bar/text()</xpath>
        <xpath>normalize-space(/foo/bar/text())</xpath>
        <xpath>normalize-space(/foo/bar)</xpath>
        <xpath>string-length(/foo/bar/text())</xpath>
        <xpath>string-length(normalize-space(/foo/bar))</xpath>
        <xpath>/web-app/servlet[1]/servlet-name</xpath>
        <xpath>/web-app/servlet[1]/servlet-name/text()</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/organization.xml</file>

        <xpath>/descendant::node()</xpath>
        <xpath>//child::node()</xpath>
        <xpath>//child::comment()</xpath>
        <xpath>//self::node()/attribute::empdate</xpath>
        
        <!-- unabbreviated axes -->
        <xpath>//@empID</xpath>
        <xpath>//@*</xpath>
        <xpath>/*//self::*</xpath>
        <xpath>//self::*/name</xpath>
        <xpath>//child::president</xpath>
        <xpath>//child::name</xpath>
        <xpath>/descendant::node()</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/moreover.xml</file>

        <xpath>/*</xpath>
        <xpath>/*/article</xpath>
        <xpath>//*</xpath>
        <xpath>//article</xpath>
        <xpath>/*/*[@code]</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/id.xml</file>

        <xpath>/foo</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/much_ado.xml</file>

        <xpath>/descendant::ACT</xpath>
        <xpath>descendant::ACT</xpath>
        <xpath>/PLAY/TITLE</xpath>
        <xpath>descendant::ACT</xpath>
        <xpath>descendant::SPEAKER</xpath>
        <xpath>/PLAY/ACT[2]/SCENE[1]/descendant::SPEAKER</xpath>
        <xpath>/PLAY/ACT[2]/SCENE[1]/descendant::SPEAKER</xpath>
        <xpath>/PLAY/ACT[2]/SCENE[1]/descendant::*</xpath>
        <xpath>/PLAY/ACT[2]/SCENE[1]/descendant::SPEAKER</xpath>
        <xpath>/PLAY/ACT/SCENE[1]</xpath>

        <xpath>count(descendant::ACT)</xpath>
        <xpath>count(/PLAY/ACT/SCENE[1])</xpath>
        <xpath>2+2</xpath>

        <!-- arithmetic expression with count() -->
        <xpath>10 + count(descendant::ACT)</xpath>
        <xpath>count(/descendant::*)+1</xpath>
        <xpath>count(descendant::SPEAKER)+1</xpath>
    </testcase>

    <testcase>
        <file>xmlFiles/sum.xml</file>

        <xpath>number(//one)</xpath>
        <xpath>sum(//one)</xpath>
        <xpath>number(//two)</xpath>
        <xpath>number(//two)+5</xpath>
        <xpath>sum(//two)</xpath>
    </testcase>

</xpaths>